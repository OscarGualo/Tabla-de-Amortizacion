/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tablaamortizacion;

import javax.swing.table.DefaultTableModel;
import org.junit.jupiter.api.Assertions;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;

/**
 *
 * @author oscar
 */
public class Amortizacion extends javax.swing.JFrame {

    /**
     * Creates new form Amortizacion
     */
    DefaultTableModel tm = new DefaultTableModel();
    private double interes; 
    private double capital ;
    private double saldoTotal;
    private static  double INTERES_MENSUAL ;

    public static double getINTERES_MENSUAL() {
        return INTERES_MENSUAL;
    }

    public static void setINTERES_MENSUAL(double INTERES_MENSUAL) {
        Amortizacion.INTERES_MENSUAL = INTERES_MENSUAL;
    }
    
        public double getInteres() {
            return interes;
        }

        public void setInteres(double interes) {
            this.interes = interes;
        }

        public double getCapital() {
            return capital;
        }

        public void setCapital(double capital) {
            this.capital = capital;
        }

        public double getSaldoTotal() {
            return saldoTotal;
        }

        public void setSaldoTotal(double saldoTotal) {
            this.saldoTotal = saldoTotal;
        }

   
    
    public Amortizacion() {
        initComponents();
        String ids[] = {"NoCuotas", "Capital", "Interes", "Saldo de Capital", " Seguro de desgravamen", "Valor total de cuota"};
        tm.setColumnIdentifiers(ids);
        jTable1.setModel(tm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMonto = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtInteres = new javax.swing.JTextField();
        txtPlazo = new javax.swing.JTextField();
        txtAmorti = new javax.swing.JTextField();
        txtPrima = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtMonto.setText("10000");
        txtMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMontoActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No.Cuota", "Capital", "Interes", "Saldo de Capital", "Seguro de Desgravamen", "Valor total de cuota"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Monto");

        jLabel2.setText("Tasa de Interes Anual");

        jLabel3.setText("Plazo en Meses");

        jLabel4.setText("Sistema de Amortizacion");

        jLabel5.setText("Prima Anual");

        txtInteres.setText("18");

        txtPlazo.setText("12");
        txtPlazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlazoActionPerformed(evt);
            }
        });

        txtAmorti.setText("Frances");

        txtPrima.setText("0.72");

        jButton1.setText("Borrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel1)
                        .addGap(123, 123, 123))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrima, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(97, 97, 97)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtInteres, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(txtPlazo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel4)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAmorti, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203)
                .addComponent(btnCalcular)
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmorti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCalcular)
                            .addComponent(jButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        setSaldoTotal(Double.parseDouble(txtMonto.getText()));
        tm.addRow(new Object[]{"0", "-", "", getSaldoTotal(), calcularDesgravamen(),"-"});
        tm.addRow(new Object[]{"1", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"2", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"3", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"4", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"5", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"6", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"7", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"8", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"9", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"10", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"11", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});
        tm.addRow(new Object[]{"12", calcularMonto(), calcularInteres(), calcularSaltoTotal(), calcularDesgravamen(), calcularCuotaFija()});

    }//GEN-LAST:event_btnCalcularActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tm.removeRow(jTable1.getSelectedRow());

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPlazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlazoActionPerformed

    }//GEN-LAST:event_txtPlazoActionPerformed

    private void txtMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMontoActionPerformed
       
    }//GEN-LAST:event_txtMontoActionPerformed
   /**
    * Esta funcion va a calcular la cuota fija a pagar cada mes ;
    * @return  retorna la cuota fija a pagar cada mes la cual sera cosntante
    */
    private double calcularCuotaFija() {
        double monto = Double.parseDouble(txtMonto.getText()); //Conviereto el monto de entra a double
        double interesMensual = calcularInteresMensual(); // Asigno el interes mensual
        setINTERES_MENSUAL(interesMensual);  
        double meses = Double.parseDouble(txtPlazo.getText());
        double fraccionDos = (interesMensual * (calculoFraccioUno(interesMensual, meses))) / (calculoFraccioUno(interesMensual, meses) - 1);
        double cuotaFija = monto * fraccionDos;
        return cuotaFija;
    }
    /**
     * Este metodo va transformar el numero de interes Anual a Mensual , dividiendo primero el numerp / 100 y luego entre 12 para transformar a interes anual
     * @return va a retornar el interes mensual
     */
    private double calcularDesgravamen(){
        double desgravamenAnual = ((Double.parseDouble(txtPrima.getText()))/100)/12;
        double prima = getSaldoTotal() * desgravamenAnual;
        return prima; 
    }
    /**
     * Esta funcion va calculcular el interes mensual, la entrada es un interes anual por lo que se divide primero entre 100 y luego entre 12 (12 meses) .
     * @return  retorna el interes mensual 
     */
    private double calcularInteresMensual(){
        double interesMensual = 0 ;
        double interesAnual = (Double.parseDouble(txtInteres.getText()) /100 );
        interesMensual = (interesAnual / 12);
   
        return interesMensual;
    }
    /**
     * Esta funcion va calcular una parte de la formula de cuota FIja (revissar formula), para no repetir codigo
     * @param interes; el interes necesario 
     * @param meses; los meses necesarios 
     * @return retorna el calculo de la parte repetida de codigo en la formula
     */
    private double calculoFraccioUno(double interes, double meses) {
        double fraccionUno = 0;
        fraccionUno = Math.pow((1.0 + interes), meses);
        return fraccionUno;
    }
    /**
     * Este metodo va a calcular la capital (cuotafija - interes) , usa 2 metodos ya definidos para que sea dinamico
     * @return  retorna la capital de cada mes 
     */
    private double calcularMonto(){
        double capital  =0 ; 
        capital = calcularCuotaFija() - calcularInteres();
        
        return capital;
    }
    /**
     * Este metodo va a calcular el interes de cada mes (saldo total *interesMensual);
     * @return 
     */
    private double calcularInteres(){
         double interes = 0; 
        interes = getSaldoTotal() * INTERES_MENSUAL; // obtengo con un get el salgo total anterior para que sea dinamico
        return interes; 
    } 
    /**
     * Este metodo va a calcular el saldo total anterior ;
     * @return 
     */
    private double calcularSaltoTotal(){
        double saltoTotal  =0 ; 
        saltoTotal = getSaldoTotal() - calcularMonto(); //Obtiene el primer saldo total (10000) y lo resta al monto  (capital)
        setSaldoTotal(saltoTotal); // seteo el salto total nuevo , para cambiar su valor y poder calcular cada mes 
        if(saltoTotal < 0 ){ // una vez el saldo total sea negativo se vuelve cero si es necesario 
            setSaldoTotal(0);
            return 0 ; 
        }
        return saltoTotal;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Amortizacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAmorti;
    private javax.swing.JTextField txtInteres;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtPlazo;
    private javax.swing.JTextField txtPrima;
    // End of variables declaration//GEN-END:variables
}
